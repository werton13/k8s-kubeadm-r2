---

#- hosts: masters:workers
#  become: yes
#  vars_files:
#    - ./vars/base_vars.yaml
#
#  tasks:
    - name: Waiting till all master and worker nodes be available via SSH, check each 10
      wait_for:
        host: "{{ item }}"
        port: 22
        sleep: 10
        delay: 10
        timeout: 600
      loop: "{{ groups.masters + groups.workers }}"
      connection: local

  
#- hosts: masters:workers
#  gather_facts: true
#  become: yes
#  vars_files:
#    - ./vars/base_vars.yaml
#  
#  tasks:    
    - name: check availability for log
      ansible.builtin.ping:

    - name: Download Dockerâ€™s official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/dockergpg
        mode: '0644'
      tags: repodocker
    
    - name: checkdocker docker.gpg key already exist locally
      stat:
        path: /etc/apt/keyrings/docker.gpg
      register: dockergpg_check

    - name: dearmor docker gpg
      shell: |
        cat /etc/apt/keyrings/dockergpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      tags: repodocker
      when: not dockergpg_check.stat.exists
    #
    - name: Add the docker apt repository - for containerd.io
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable
        state: present
        filename: docker
        update_cache: true
      tags:
        - repodocker

    - name: update apt
      apt:
        update_cache: yes
        name: "{{ item }}"
        state: present
      loop:
        - sshpass
        - whois       # required for 'mkpassword' command
        - python-pip  # required to install kubernetes python package
        - python3-pip # required to install kubernetes python package
        - containerd.io
        - apt-transport-https # required for kubeadm
        - ca-certificates     # required for kubeadm
        - curl                # required for kubeadm
        - jq


    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: "{{ item }}"
      loop:
        - kubernetes
        - yq

    # swap disable:
    - name: show swapon state
      debug:
        msg: "SWAP is enabled, will try to disable it"
    
    - name: disable swapon
      shell: "swapoff -a"
      register: SWAP_STATE
       
    - name: edit fstab to disabe swap on startup
      lineinfile:
        path: /etc/fstab
        regexp: '^/swap'
        line: '#/swap.img       none    swap    sw      0       0'
    
    - name: show swapoff result
      debug:
        msg: "swap on {{ inventory_hostname }} is disabled"

    - name: create required  directories
      file: 
        path: "{{ item }}"
        state: directory
        mode: 0700
      loop:
        - /etc/containerd

    - name: copy additional config for loaded modules
      copy:
        src: "./files/load.d_k8s.conf"
        dest: "/etc/modules-load.d/k8s.conf"
    - name: copy additional kernel params config file
      copy:
        src: "./files/sysctl.d_k8s.conf"
        dest: "/etc/sysctl.d/k8s.conf"
    - name: copy containerd config file
      copy:
        src: "./files/containerd_config.toml"
        dest: "/etc/containerd/config.toml"
    
    - name:  apply kernel parameters changes
      shell: |
        modprobe overlay
        modprobe br_netfilter
        sysctl --system
    
    - name: restart containerd
      systemd:
        state: restarted
        daemon_reload: yes
        name: "{{ item }}"
      loop:
        - containerd

...
