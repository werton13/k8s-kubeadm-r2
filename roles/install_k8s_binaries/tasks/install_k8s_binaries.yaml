---
#- hosts: masters:workers
#  gather_facts: true
#  become: yes
#  vars_files:
#  - ./vars/base_vars.yaml
#  tasks:

#    # helm version is currently hardcoded, managed through role variable 'helm_version'
#    - name: Install collections and roles from requirements.yml file
#      local_action: command ansible-galaxy install -r requirements.yml -p roles/
#      tags: helm_install
#      connection: local
#    # this will install Helm only on DVM   
#    - include_role:
#        name: geerlingguy.helm
#        apply:
#          delegate_to: "{{ groups['dvm'][0] }}"
#      vars:
#        helm_version: 'v3.11.1'
#      tags: helm_install
  
    - name: Download the Google Cloud public signing key
      ansible.builtin.get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /etc/apt/keyrings/kubernetes-archive-keyring.gpg 
        mode: '0644'
      register: dnl_state
      until: dnl_state.failed == false
      retries: 100
      delay: 10
      tags: repoad        
    
    #
    - name: Add the Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
        update_cache: true
      tags:
        - repoadd
    
    #echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: debug k8s_ver variable
      debug:
        msg: "{{ k8s_ver }}"
      tags: kube_bin_install

    - name: update apt
      ansible.builtin.apt:
        update_cache: yes
        name: "{{ item }}"
        state: present
        allow_downgrade: yes
      loop:
        - "kubectl={{ k8s_ver }}"
        - "kubeadm={{ k8s_ver }}"
        - "kubelet={{ k8s_ver }}"
      tags: kube_bin_install
        
    
    - name: Hold kubeadm kubelet and kubectl versions - prevent auto updated and removes
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    
